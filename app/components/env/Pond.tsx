/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 public/models/enviroment/Pond.glb -o app/components/env/Pond.tsx --types --transform --keepnames --precision 2 
Files: public/models/enviroment/Pond.glb [1.46MB] > /Users/mendsalbert/Documents/safariVerse/app/components/env/Pond-transformed.glb [97.69KB] (93%)
*/

import * as THREE from "three";
import React from "react";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    ["Node-Mesh"]: THREE.Mesh;
    ["Node-Mesh_1"]: THREE.Mesh;
  };
  materials: {
    PaletteMaterial002: THREE.MeshStandardMaterial;
    PaletteMaterial001: THREE.MeshStandardMaterial;
  };
  animations: GLTFAction[];
};

export function Model(props: JSX.IntrinsicElements["group"]) {
  const { nodes, materials } = useGLTF(
    "/models/enviroment/Pond-transformed.glb"
  ) as GLTFResult;
  return (
    <group {...props} dispose={null}>
      <mesh
        name="Node-Mesh"
        geometry={nodes["Node-Mesh"].geometry}
        material={materials.PaletteMaterial002}
      />
      <mesh
        name="Node-Mesh_1"
        geometry={nodes["Node-Mesh_1"].geometry}
        material={materials.PaletteMaterial001}
      />
    </group>
  );
}

useGLTF.preload("/models/enviroment/Pond-transformed.glb");
